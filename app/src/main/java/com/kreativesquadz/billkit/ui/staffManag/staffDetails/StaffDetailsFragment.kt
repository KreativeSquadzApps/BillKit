package com.kreativesquadz.billkit.ui.staffManag.staffDetails

import androidx.fragment.app.viewModels
import android.os.Bundle
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.navigation.fragment.findNavController
import androidx.recyclerview.widget.LinearLayoutManager
import com.kreativesquadz.billkit.BR
import com.kreativesquadz.billkit.R
import com.kreativesquadz.billkit.adapter.GenericAdapter
import com.kreativesquadz.billkit.databinding.FragmentStaffDetailsBinding
import com.kreativesquadz.billkit.interfaces.OnItemClickListener
import com.kreativesquadz.billkit.model.Staff
import dagger.hilt.android.AndroidEntryPoint
import kotlin.properties.Delegates

@AndroidEntryPoint
class StaffDetailsFragment : Fragment() {
    var _binding: FragmentStaffDetailsBinding? = null
    private val viewModel: StaffDetailsViewModel by viewModels()
    val binding get() = _binding!!
    var staffId by Delegates.notNull<Long>()
    private lateinit var adapter: GenericAdapter<String>

    val staff by lazy {
        arguments?.getSerializable("staff") as? Staff
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
            staffId = staff!!.id
            viewModel.getStaffDetails(staffId)

    }

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        _binding = FragmentStaffDetailsBinding.inflate(inflater, container, false)
        initView()
        observers()
        onClickListeners()
        setupRecyclerView()
        return binding.root
    }

    private fun initView() {
       binding.staff = staff
    }

    private fun onClickListeners() {
        binding.viewSales.setOnClickListener {
            val action = StaffDetailsFragmentDirections.actionStaffDetailsFragmentToBillHistoryFrag("Created By "+staff?.name)
            findNavController().navigate(action)
        }
    }

    private fun observers() {
        viewModel.staffDetails.observe(viewLifecycleOwner) {
            binding.staff = it

        }
    }

    private fun setupRecyclerView() {
        adapter = GenericAdapter(
            staff?.permissions?.split(",") ?: emptyList(),
            object : OnItemClickListener<String> {
                override fun onItemClick(item: String) {

                }
            },
            R.layout.item_permissions,
            BR.permission // Variable ID generated by data binding
        )
        binding.recyclerView.adapter = adapter
        binding.recyclerView.layoutManager = LinearLayoutManager(context)
    }

    override fun onDestroyView() {
        super.onDestroyView()
        _binding = null
    }

}