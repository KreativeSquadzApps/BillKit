package com.kreativesquadz.billkit.ui.bills.billHistory

import android.os.Bundle
import android.util.Log
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.hilt.navigation.fragment.hiltNavGraphViewModels
import androidx.navigation.fragment.findNavController
import androidx.recyclerview.widget.LinearLayoutManager
import com.kreativesquadz.billkit.BR
import com.kreativesquadz.billkit.Config
import com.kreativesquadz.billkit.R
import com.kreativesquadz.billkit.adapter.GenericAdapter
import com.kreativesquadz.billkit.databinding.FragmentBillHistoryBinding
import com.kreativesquadz.billkit.interfaces.OnItemClickListener
import com.kreativesquadz.billkit.model.Customer
import com.kreativesquadz.billkit.model.Invoice
import com.kreativesquadz.billkit.ui.customerManag.CustomerManagementViewModel
import timber.log.Timber

class BillHistoryFrag : Fragment() {
    private var _binding: FragmentBillHistoryBinding ?= null
    private val viewModel: BillHistoryViewModel by hiltNavGraphViewModels(R.id.mobile_navigation)
    private val binding get() = _binding!!
    private lateinit var adapter: GenericAdapter<Invoice>

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
            viewModel.getAllInvoices()
    }

    override fun onCreateView(
        inflater: LayoutInflater,
        container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        _binding = FragmentBillHistoryBinding.inflate(inflater, container, false)
        binding.viewModel = viewModel
        setupRecyclerView()
        observers()
        return binding.root
    }

    private fun observers(){
        viewModel.customers.observe(viewLifecycleOwner) {
            println(it.message)
            it.data?.let { it1 ->
                Log.e("TAG", "Customer: ${it1}")

            }
        }
        viewModel.invoices.observe(viewLifecycleOwner) {
            println(it.message)
            //Log.e("TAG", "observers: ${it}")
            it.data?.let { it1 ->
                adapter.submitList(it.data)
            }
        }
    }

    private fun setupRecyclerView() {
        adapter = GenericAdapter(
            viewModel.invoices.value?.data ?: emptyList(),
            object : OnItemClickListener<Invoice> {
                override fun onItemClick(item: Invoice) {
                     val action = BillHistoryFragDirections.actionBillHistoryFragToInvoiceFragment(item,Config.BillDetailsFragmentToReceiptFragment)
                    findNavController().navigate(action)
                }
            },
            R.layout.item_bill_invoice_history,
            BR.invoice // Variable ID generated by data binding
        )
        binding.billHistoryRecyclerView.adapter = adapter
        binding.billHistoryRecyclerView.layoutManager = LinearLayoutManager(context)
    }


    override fun onDestroyView() {
        super.onDestroyView()
        _binding = null
    }
}



