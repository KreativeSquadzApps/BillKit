package com.kreativesquadz.billkit.ui.bills.billHistory.invoice

import android.os.Bundle
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.fragment.app.activityViewModels
import androidx.navigation.fragment.findNavController
import androidx.recyclerview.widget.LinearLayoutManager
import com.kreativesquadz.billkit.BR
import com.kreativesquadz.billkit.R
import com.kreativesquadz.billkit.adapter.GenericAdapter
import com.kreativesquadz.billkit.bluetooth.BluetoothHelper
import com.kreativesquadz.billkit.databinding.FragmentInvoiceBinding
import com.kreativesquadz.billkit.interfaces.OnItemClickListener
import com.kreativesquadz.billkit.model.InvoiceItem
import com.kreativesquadz.billkit.model.Invoice

class InvoiceFragment : Fragment() {
    var _binding: FragmentInvoiceBinding? = null
    val binding get() = _binding!!
    private val viewModel: InvoiceViewModel by activityViewModels()
    private lateinit var adapter: GenericAdapter<InvoiceItem>
    private lateinit var bluetoothHelper: BluetoothHelper
    val invoice by lazy {
        arguments?.getSerializable("invoice") as? Invoice
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
    }

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        _binding = FragmentInvoiceBinding.inflate(inflater, container, false)
        binding.invoice = invoice
        binding.isCustomerAvailable = invoice?.customerId != null
        binding.customer = viewModel.getCustomerById(invoice?.customerId.toString())
        setupRecyclerView(invoice)
        onClickListeners()
        return binding.root

    }

    fun onClickListeners() {
        binding.btnReceipt.setOnClickListener {
            val action = InvoiceFragmentDirections.actionInvoiceFragmentToReceiptFrag(invoice?.id.toString())
            findNavController().navigate(action)
        }

    }

    private fun setupRecyclerView(invoice: Invoice?) {
        adapter = GenericAdapter(
            invoice?.invoiceItems ?: emptyList(),
            object : OnItemClickListener<InvoiceItem> {
                override fun onItemClick(item: InvoiceItem) {
                    // Handle item click
                }
            },
            R.layout.item_invoice_details_bill,
            BR.item // Variable ID generated by data binding
        )
        binding.recyclerView.adapter = adapter
        binding.recyclerView.layoutManager = LinearLayoutManager(context)
    }

    override fun onDestroyView() {
        super.onDestroyView()
        _binding = null
    }

}