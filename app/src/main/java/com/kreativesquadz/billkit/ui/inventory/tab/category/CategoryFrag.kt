package com.kreativesquadz.billkit.ui.inventory.tab.category

import androidx.fragment.app.viewModels
import android.os.Bundle
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.Toast
import androidx.recyclerview.widget.LinearLayoutManager
import com.kreativesquadz.billkit.BR
import com.kreativesquadz.billkit.R
import com.kreativesquadz.billkit.adapter.GenericAdapter
import com.kreativesquadz.billkit.databinding.FragmentCategoryBinding
import com.kreativesquadz.billkit.interfaces.OnItemClickListener
import com.kreativesquadz.billkit.model.Category
import dagger.hilt.android.AndroidEntryPoint


@AndroidEntryPoint
class CategoryFrag : Fragment() {
    private val viewModel: CategoryViewModel by viewModels()
    private var _binding: FragmentCategoryBinding? = null
    private val binding get() = _binding!!
    private lateinit var adapter: GenericAdapter<Category>

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        viewModel.getCategories()
    }

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        _binding = FragmentCategoryBinding.inflate(inflater, container, false)
        setupRecyclerView()
        observers()
        onClickListeners()
        return binding.root
    }

    private fun onClickListeners(){
        binding.addCategory.setOnClickListener {
            viewModel.addcategoryObj(requireContext(),binding.etCategory.text.toString())
        }
    }

    private fun observers(){
        viewModel.categoriesStatus.observe(viewLifecycleOwner) {
            Toast.makeText(requireContext(),it.message, Toast.LENGTH_SHORT).show()
            if (it.invoiceId==200){
                binding.etCategory.text.clear()
            }
        }

        viewModel.category.observe(viewLifecycleOwner) {
            it.data?.let {
                adapter.submitList(it)
            }
        }
    }

    private fun setupRecyclerView() {
        adapter = GenericAdapter(
            viewModel.category.value?.data ?: emptyList(),
            object : OnItemClickListener<Category> {
                override fun onItemClick(item: Category) {
                    // Handle item click
                }
            },
            R.layout.item_category,
            BR.category // Variable ID generated by data binding
        )
        binding.recyclerView.adapter = adapter
        binding.recyclerView.layoutManager = LinearLayoutManager(context)
    }
}