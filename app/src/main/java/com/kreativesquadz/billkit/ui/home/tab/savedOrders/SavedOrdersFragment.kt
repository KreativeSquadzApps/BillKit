package com.kreativesquadz.billkit.ui.home.tab.savedOrders

import androidx.fragment.app.viewModels
import android.os.Bundle
import android.util.Log
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.fragment.app.activityViewModels
import androidx.recyclerview.widget.LinearLayoutManager
import androidx.recyclerview.widget.StaggeredGridLayoutManager
import com.kreativesquadz.billkit.BR
import com.kreativesquadz.billkit.R
import com.kreativesquadz.billkit.adapter.GenericAdapter
import com.kreativesquadz.billkit.databinding.FragmentSavedOrdersBinding
import com.kreativesquadz.billkit.interfaces.FragmentBaseFunctions
import com.kreativesquadz.billkit.interfaces.OnItemClickListener
import com.kreativesquadz.billkit.model.Product
import com.kreativesquadz.billkit.model.SavedOrder
import com.kreativesquadz.billkit.ui.home.tab.SharedViewModel
import dagger.hilt.android.AndroidEntryPoint

@AndroidEntryPoint
class SavedOrdersFragment : Fragment(), FragmentBaseFunctions {
    private var _binding: FragmentSavedOrdersBinding? = null
    private val binding get() = _binding!!

    private val viewModel: SavedOrdersViewModel by viewModels()
    private val sharedViewModel: SharedViewModel by activityViewModels()
    private lateinit var adapter: GenericAdapter<SavedOrder>

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        viewModel.getSavedOrders()

        
    }

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        _binding = FragmentSavedOrdersBinding.inflate(inflater, container, false)
        observers()
        onClickListener()
        setupRecyclerView()

        return binding.root
    }

    override fun observers() {
        viewModel.savedOrder.observe(viewLifecycleOwner) {
                adapter.submitList(it.toMutableList())

        }
    }

    override fun onClickListener() {

    }




    private fun setupRecyclerView() {
        adapter = GenericAdapter(
            viewModel.savedOrder.value ?: emptyList(),
            object : OnItemClickListener<SavedOrder> {
                override fun onItemClick(item: SavedOrder) {
                    Log.d("TAG", "onItemClick: ${item}")
                    item.items?.let {
                        sharedViewModel.setItemsList(item.items)
                    }
                }
            },
            R.layout.item_saved_order,
            BR.savedOrder // Variable ID generated by data binding
        )
        binding.recyclerView.adapter = adapter
        binding.recyclerView.layoutManager = LinearLayoutManager(context)
    }


}