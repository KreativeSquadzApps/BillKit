package com.kreativesquadz.hisabkitab.ui.customerManag.customerDetails.tab.billFrag

import android.os.Bundle
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.fragment.app.activityViewModels
import androidx.navigation.fragment.findNavController
import androidx.recyclerview.widget.LinearLayoutManager
import com.kreativesquadz.hisabkitab.BR
import com.kreativesquadz.hisabkitab.Config
import com.kreativesquadz.hisabkitab.R
import com.kreativesquadz.hisabkitab.adapter.GenericAdapter
import com.kreativesquadz.hisabkitab.databinding.FragmentBillsBinding
import com.kreativesquadz.hisabkitab.interfaces.OnItemClickListener
import com.kreativesquadz.hisabkitab.model.Invoice
import com.kreativesquadz.hisabkitab.ui.customerManag.customerDetails.CustomerDetailsFragmentDirections
import com.kreativesquadz.hisabkitab.ui.customerManag.customerDetails.CustomerSharedViewModel
import dagger.hilt.android.AndroidEntryPoint

@AndroidEntryPoint
class BillsFragment : Fragment() {
    private var _binding: FragmentBillsBinding? = null
    private val binding get() = _binding!!
    private val viewModel: BillsViewModel by activityViewModels()
    private lateinit var adapter: GenericAdapter<Invoice>
    private val sharedViewModel: CustomerSharedViewModel by activityViewModels()

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        _binding = FragmentBillsBinding.inflate(inflater, container, false)
        return binding.root
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)
        setupRecyclerView()
        observers() // Moved this here
    }

    private fun setupRecyclerView() {
        adapter = GenericAdapter(
            emptyList(),  // Initially pass an empty list
            object : OnItemClickListener<Invoice> {
                override fun onItemClick(item: Invoice) {
                    val action = CustomerDetailsFragmentDirections.actionCustomerDetailsFragmentToInvoiceFragment(
                        item, Config.BillDetailsFragmentToReceiptFragment
                    )
                    findNavController().navigate(action)
                }
            },
            R.layout.item_bill_invoice_history,
            BR.invoice // Variable ID generated by data binding
        )
        binding.recyclerView.adapter = adapter
        binding.recyclerView.layoutManager = LinearLayoutManager(context)
    }

    private fun observers() {
        sharedViewModel.customer.observe(viewLifecycleOwner) { customer ->
            customer?.let {
                viewModel.getAllInvoicesCustomer(it.id)
            }
        }

        viewModel.invoices.observe(viewLifecycleOwner) { invoices ->
            invoices?.let {
                adapter.submitList(it)
            }
        }
    }

    override fun onDestroyView() {
        super.onDestroyView()
        _binding = null
    }
}
